// can't use jp,,,,fmmmm

// SublimeSocketAsset's testSuite

// with linefeed
defineFilter:
{
    "name": "13/12/04 18:16:49",
    "patterns": [
        {
            "(.*)dummyline": {
                "selectors": [
                    {
                        "showAtLog": {
                            "message": "should be 1/2:groups[0] in filterSource[]/."
                        }
                    }
                ]
            }
        },
        {
            "^dummyline": {
                "selectors": [
                    {
                        "showAtLog": {
                            "message": "dummy"
                        }
                    }
                ]
            }
        }
    ],
    "dotall":true
}
->filtering:
{
    "name": "13/12/04 18:16:49",
    "source": "1\\n2 dummyline",
    "debug":false
}
->assertResult:
{
    "id": "contains value",
    "contains": {
        "runFiltering": [
            {
                "13/12/04 18:16:49": {
                    "message": "should be 1/2:1\n2  in 1\n2 dummyline/."
                }
            }
        ]
    },
    "message": "notmatch."
}


// // no linefeed
->defineFilter:
{
    "name": "13/12/04 23:58:49",
    "patterns": [
        {
            "(.*)dummyline": {
                "selectors": [
                    {
                        "showAtLog": {
                            "message": "should be 1/2:groups[0] in filterSource[]/."
                        }
                    }
                ]
            }
        },
        {
            "^dummyline": {
                "selectors": [
                    {
                        "showAtLog": {
                            "message": "dummy"
                        }
                    }
                ]
            }
        }
    ],
    "dotall":true
}
->filtering:
{
    "name": "13/12/04 23:58:49",
    "source": "1\\n2 dummyline",
    "debug":false
}
->assertResult:
{
	"id":"not contains value",
    "contains": {
        "filtering": "13/12/04 18:16:49"
    },
    "message": "not match."
}
->assertResult:
{
    "id":"not contains value2",
    "contains": {
        "filtering": "13/12/04 18:16:49"
    },
    "message": "not match."
}
// ->assertResult:
// {
// 	"id":"not contains value2",
//     "contains": {
//         "filtering": "13/12/04 18:16:49"
//     },
//     "message": "not match."
// }

// ->assertResult:
// {
// 	"id":"not contains value3",
//     "contains": {
//         "filtering": "13/12/04 18:16:49"
//     },
//     "message": "not match."
// }

// ->assertResult:
// {
// 	"id":"not contains value4",
//     "contains": {
//         "filtering": "13/12/04 18:16:49"
//     },
//     "message": "not match."
// }

// ->assertResult:
// {
// 	"id":"not contains value5",
//     "contains": {
//         "filtering": "13/12/04 18:16:49"
//     },
//     "message": "not match."
// }

// ->assertResult:
// {
// 	"id":"not contains value6",
//     "contains": {
//         "filtering": "13/12/04 18:16:49"
//     },
//     "message": "not match."
// }